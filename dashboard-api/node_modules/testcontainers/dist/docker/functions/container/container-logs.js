"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.containerLogs = void 0;
const logger_1 = require("../../../logger");
const demux_stream_1 = require("../demux-stream");
const containerLogs = (container) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const options = {
            follow: true,
            stdout: true,
            stderr: true,
        };
        const stream = (yield container.logs(options));
        stream.socket.unref();
        return demux_stream_1.demuxStream(stream);
    }
    catch (err) {
        logger_1.log.error(`Failed to get container logs: ${err}`);
        throw err;
    }
});
exports.containerLogs = containerLogs;
