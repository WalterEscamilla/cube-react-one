import { DockerImageName } from "../../../docker-image-name";
import { BoundPorts } from "../../../bound-ports";
import Dockerode from "dockerode";
import { BindMount, Command, ContainerName, Env, ExtraHost, HealthCheck, NetworkMode, TmpFs } from "../../types";
export declare type CreateContainerOptions = {
    imageName: DockerImageName;
    env: Env;
    cmd: Command[];
    bindMounts: BindMount[];
    tmpFs: TmpFs;
    boundPorts: BoundPorts;
    name?: ContainerName;
    networkMode?: NetworkMode;
    healthCheck?: HealthCheck;
    useDefaultLogDriver: boolean;
    privilegedMode: boolean;
    autoRemove: boolean;
    extraHosts: ExtraHost[];
    ipcMode?: string;
    user?: string;
};
export declare const createContainer: (options: CreateContainerOptions) => Promise<Dockerode.Container>;
