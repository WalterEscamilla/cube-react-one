"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeNetwork = void 0;
const logger_1 = require("../../../logger");
const dockerode_1 = require("../../dockerode");
const removeNetwork = (id) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        logger_1.log.info(`Removing network ${id}`);
        const network = dockerode_1.dockerode.getNetwork(id);
        const { message } = yield network.remove();
        if (message) {
            logger_1.log.warn(message);
        }
    }
    catch (err) {
        logger_1.log.error(`Failed to remove network ${id}: ${err}`);
        throw err;
    }
});
exports.removeNetwork = removeNetwork;
