/// <reference types="node" />
import { StartedTestContainer, StopOptions, StoppedTestContainer } from "../test-container";
import { Port } from "../port";
import { ContainerName, Host, Id } from "../docker/types";
import { Command, ExecResult } from "../docker/types";
import { Readable } from "stream";
export declare class AbstractStartedContainer {
    protected readonly startedTestContainer: StartedTestContainer;
    constructor(startedTestContainer: StartedTestContainer);
    stop(options?: Partial<StopOptions>): Promise<StoppedTestContainer>;
    getHost(): Host;
    getMappedPort(port: Port): Port;
    getName(): ContainerName;
    getId(): Id;
    getNetworkNames(): string[];
    getNetworkId(networkName: string): string;
    getIpAddress(networkName: string): string;
    exec(command: Command[]): Promise<ExecResult>;
    logs(): Promise<Readable>;
}
