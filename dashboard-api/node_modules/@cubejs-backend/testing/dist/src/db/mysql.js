"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MysqlDBRunner = void 0;
const testcontainers_1 = require("testcontainers");
const db_runner_abstract_1 = require("./db-runner.abstract");
class MysqlDBRunner extends db_runner_abstract_1.DbRunnerAbstract {
    static startContainer(options) {
        const version = process.env.TEST_MYSQL_VERSION || options.version || '5.7';
        const builder = new testcontainers_1.GenericContainer(`mysql:${version}`)
            .withEnv('MYSQL_ROOT_PASSWORD', process.env.TEST_DB_PASSWORD || 'Test1test')
            .withHealthCheck({
            test: 'mysqladmin ping -h localhost',
            interval: 5 * 1000,
            timeout: 2 * 1000,
            retries: 3,
            startPeriod: 10 * 1000,
        })
            .withWaitStrategy(testcontainers_1.Wait.forHealthCheck())
            .withExposedPorts(3306);
        if (version.split('.')[0] === '8') {
            /**
             * workaround for MySQL 8 and unsupported auth in mysql package
             * @link https://github.com/mysqljs/mysql/pull/2233
             */
            builder.withCmd(['--default-authentication-plugin=mysql_native_password']);
        }
        if (options.volumes) {
            // eslint-disable-next-line no-restricted-syntax
            for (const { source, target, bindMode } of options.volumes) {
                builder.withBindMount(source, target, bindMode);
            }
        }
        return builder.start();
    }
}
exports.MysqlDBRunner = MysqlDBRunner;
//# sourceMappingURL=mysql.js.map