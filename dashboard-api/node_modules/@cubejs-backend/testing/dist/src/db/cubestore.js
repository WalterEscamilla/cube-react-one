"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CubeStoreDBRunner = void 0;
const testcontainers_1 = require("testcontainers");
const db_runner_abstract_1 = require("./db-runner.abstract");
class CubeStoreDBRunner extends db_runner_abstract_1.DbRunnerAbstract {
    static startContainer(options) {
        const version = process.env.TEST_CUBESTORE_VERSION || options.version || 'latest';
        const builder = new testcontainers_1.GenericContainer(`cubejs/cubestore:${version}`)
            .withStartupTimeout(10 * 1000)
            .withExposedPorts(3030);
        if (options.volumes) {
            // eslint-disable-next-line no-restricted-syntax
            for (const { source, target, bindMode } of options.volumes) {
                builder.withBindMount(source, target, bindMode);
            }
        }
        return builder.start();
    }
}
exports.CubeStoreDBRunner = CubeStoreDBRunner;
//# sourceMappingURL=cubestore.js.map