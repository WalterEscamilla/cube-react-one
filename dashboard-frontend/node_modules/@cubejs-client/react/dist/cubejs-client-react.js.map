{"version":3,"file":"cubejs-client-react.js","sources":["../src/CubeContext.js","../src/utils.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/is-mounted.js","../src/hooks/cube-fetch.js","../src/hooks/cube-sql.js","../src/hooks/dry-run.js","../src/hooks/lazy-dry-run.js","../src/hooks/cube-query.js"],"sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import Anser from 'anser';\nimport { encode } from 'html-entities';\n\nconst colors = {\n  reset: 'orange',\n  black: 'black',\n  red: 'red',\n  green: 'green',\n  yellow: 'orange',\n  blue: 'blue',\n  magenta: 'magenta',\n  cyan: 'cyan',\n  gray: 'gray',\n  lightgrey: 'lightgrey',\n  darkgrey: 'darkgrey',\n};\n\nconst anserMap = {\n  'ansi-bright-black': 'black',\n  'ansi-bright-yellow': 'yellow',\n  'ansi-yellow': 'yellow',\n  'ansi-bright-green': 'green',\n  'ansi-green': 'green',\n  'ansi-bright-cyan': 'cyan',\n  'ansi-cyan': 'cyan',\n  'ansi-bright-red': 'red',\n  'ansi-red': 'red',\n  'ansi-bright-magenta': 'magenta',\n  'ansi-magenta': 'magenta',\n  'ansi-white': 'darkgrey',\n};\n\nexport function generateAnsiHTML(txt) {\n  const arr = new Anser().ansiToJson(encode(txt), {\n    use_classes: true,\n  });\n\n  let result = '';\n  let open = false;\n  for (let index = 0; index < arr.length; ++index) {\n    const c = arr[index];\n    const { content } = c;\n    const { fg } = c;\n\n    const contentParts = content.split('\\n');\n    for (let j = 0; j < contentParts.length; ++j) {\n      if (!open) {\n        result += '<span data-ansi-line=\"true\">';\n        open = true;\n      }\n      const part = contentParts[j].replace('\\r', '');\n      const color = colors[anserMap[fg]];\n\n      if (color != null) {\n        result += `<span style=\"color: ${color};\">${part}</span>`;\n      } else {\n        if (fg != null) {\n          console.log('Missing color mapping: ', fg);\n        }\n\n        result += `<span>${part}</span>`;\n      }\n\n      if (j < contentParts.length - 1) {\n        result += '</span>';\n        open = false;\n        result += '<br/>';\n      }\n    }\n  }\n\n  if (open) {\n    result += '</span>';\n  }\n\n  return result;\n}\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\nimport { generateAnsiHTML } from './utils';\n\nexport default class QueryRenderer extends React.Component {\n  // @deprected use `isQueryPresent` from `@cubejs-client/core`\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubejsApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubejsApi !== cubejsApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubejsApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubejsApi || this.context && this.context.cubejsApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubejsApi = this.cubejsApi();\n\n    if (query && isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubejsApi = this.cubejsApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n\n    const loadState = {\n      error: error ? new Error(generateAnsiHTML(error.message || error.toString())) : null,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n\n    if (render) {\n      return render(loadState);\n    }\n\n    return null;\n  }\n}\n\nQueryRenderer.contextType = CubeContext;\n\nQueryRenderer.defaultProps = {\n  cubejsApi: null,\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null,\n  updateOnlyOnStateChange: false,\n  resetResultSetOnChange: true\n};\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nQueryRendererWithTotals.defaultProps = {\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null\n};\n\nexport default QueryRendererWithTotals;\n","import React from 'react';\nimport { clone, equals, indexBy, pick, prop, uniq, uniqBy } from 'ramda';\nimport {\n  defaultHeuristics,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  isQueryPresent,\n  moveItemInArray,\n  movePivotItem,\n  ResultSet\n} from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\nimport { generateAnsiHTML } from './utils';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  static contextType = CubeContext;\n\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n    this.orderMembersOrderKeys = [];\n  }\n\n  async componentDidMount() {\n    this.prevContext = this.context;\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (this.prevContext?.cubejsApi !== this.context?.cubejsApi) {\n      this.prevContext = this.context;\n      await this.fetchMeta();\n    }\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubejsApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    if (!this.cubejsApi()) {\n      return;\n    }\n\n    let meta;\n    let metaError = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubejsApi().meta();\n    } catch (error) {\n      metaError = error;\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError: metaError ? new Error(generateAnsiHTML(metaError.message || metaError.toString())) : null,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubejsApi() {\n    const { cubejsApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubejsApi || (this.context && this.context.cubejsApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n      return {\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      };\n    };\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      values: member.values,\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1);\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n    } = this.state;\n\n    const flatFilters = uniqBy((filter) => `${prop('member', filter)}${prop('operator', filter)}`,\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      })));\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    let availableMeasures = [];\n    let availableDimensions = [];\n    let availableSegments = [];\n    let availableFilterMembers = [];\n\n    const availableMembers = meta?.membersGroupedByCube() || {\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n    };\n\n    if (meta) {\n      availableMeasures = meta.membersForQuery(query, 'measures');\n      availableDimensions = meta.membersForQuery(query, 'dimensions');\n      availableSegments = meta.membersForQuery(query, 'segments');\n\n      const indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n      const indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n      const cubeNames = uniq([...Object.keys(indexedMeasures), ...Object.keys(indexedDimensions)]).sort();\n\n      availableFilterMembers = cubeNames.map((name) => {\n        const cube = indexedMeasures[name] || indexedDimensions[name];\n\n        return {\n          ...cube,\n          members: [\n            ...indexedMeasures[name]?.members,\n            ...indexedDimensions[name]?.members\n          ].sort((a, b) => (a.shortTitle > b.shortTitle ? 1 : -1)),\n        };\n      });\n    }\n\n    const activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n    const members = [\n      ...measures,\n      ...dimensions,\n      ...timeDimensions.map(({ dimension }) => dimension)\n    ];\n\n    let orderMembers = uniqBy(prop('id'), [\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...members.map(({ name, title }) => ({ id: name, title, order: activeOrder?.[name] || 'none' })),\n    ]);\n\n    if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n      this.orderMembersOrderKeys = orderMembers.map(({ id }) => id);\n    }\n\n    if (this.orderMembersOrderKeys.length) {\n      // Preserve order until the members change or manually re-ordered\n      // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n      orderMembers = (this.orderMembersOrderKeys || []).map((id) => orderMembers.find((member) => member.id === id));\n    }\n\n    return {\n      meta,\n      metaError,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      availableMembers,\n      availableFilterMembers,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          const nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n          this.orderMembersOrderKeys = nextArray.map(({ id }) => id);\n\n          this.updateQuery({\n            order: nextArray.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: {\n        ...query,\n        ...queryUpdate,\n      },\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          // use clone to make sure we don't save object references\n          vizStateSent = clone(newVizState);\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    const shouldFetchDryRun = !equals(\n      pick(['measures', 'dimensions', 'timeDimensions'], stateQuery),\n      pick(['measures', 'dimensions', 'timeDimensions'], finalState.query)\n    );\n\n    if (shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubejsApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          queryError: new Error(generateAnsiHTML(error.message || error.toString())),\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return {\n      ...query,\n      filters: (query.filters || []).filter((f) => f.operator),\n    };\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubejsApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubejsApi={cubejsApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n\nQueryBuilder.defaultProps = {\n  cubejsApi: null,\n  stateChangeHeuristics: null,\n  disableHeuristics: false,\n  render: null,\n  wrapWithQueryRenderer: true,\n  defaultChartType: 'line',\n  defaultQuery: {},\n  initialVizState: null,\n  onVizStateChanged: null,\n\n  // deprecated\n  query: null,\n  setQuery: null,\n  vizState: null,\n  setVizState: null,\n};\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nexport default function CubeProvider({ cubejsApi, children }) {\n  return <CubeContext.Provider value={{ cubejsApi }}>{children}</CubeContext.Provider>;\n}\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return () => isMounted.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeFetch(method, options = {}) {\n  const isMounted = useIsMounted();\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n\n  const [response, setResponse] = useState({\n    isLoading: false,\n    response: null,\n  });\n  const [error, setError] = useState(null);\n\n  const { skip = false } = options;\n\n  async function load(loadOptions = {}, ignoreSkip = false) {\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n    const query = loadOptions.query || options.query;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    if ((ignoreSkip || !skip) && query && isQueryPresent(query)) {\n      setError(null);\n      setResponse({\n        isLoading: true,\n        response: null,\n      });\n\n      try {\n        const response = await cubejsApi[method](query, {\n          mutexObj: mutexRef.current,\n          mutexKey: method,\n        });\n\n        if (isMounted()) {\n          setResponse({\n            response,\n            isLoading: false,\n          });\n        }\n      } catch (err) {\n        if (isMounted()) {\n          setError(err);\n          setResponse({\n            isLoading: false,\n            response: null,\n          });\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, useDeepCompareMemoize([Object.keys(options.query?.order || {}), options, context]));\n\n  return {\n    ...response,\n    error,\n    refetch: (options) => load(options, true),\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeSql(query, options = {}) {\n  return useCubeFetch('sql', {\n    ...options,\n    query\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useDryRun(query, options = {}) {\n  return useCubeFetch('dryRun', {\n    ...options,\n    query\n  })\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useLazyDryRun(query, options = {}) {\n  const { refetch, ...result } = useCubeFetch('dryRun', {\n    ...options,\n    query,\n    skip: true\n  });\n\n  return [refetch, result];\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\n\nexport function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useRef(true);\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n\n    try {\n      const response = await cubejsApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n      });\n\n      if (isMounted.current) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted.current) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted.current) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubejsApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted.current) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted.current) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n"],"names":["createContext","colors","reset","black","red","green","yellow","blue","magenta","cyan","gray","lightgrey","darkgrey","anserMap","generateAnsiHTML","txt","arr","Anser","ansiToJson","encode","use_classes","result","open","index","length","c","content","fg","contentParts","split","j","part","replace","color","console","log","QueryRenderer","props","state","mutexObj","query","queries","load","loadQueries","nextProps","nextState","render","cubejsApi","loadSql","updateOnlyOnStateChange","equals","prevProps","context","resetResultSetOnChange","setState","isLoading","error","sqlQuery","resultSet","isQueryPresent","sql","mutexKey","then","Promise","all","resultPromises","toPairs","map","name","r","fromPairs","loadState","Error","message","toString","loadingState","React","Component","contextType","CubeContext","defaultProps","QueryRendererWithTotals","restProps","totals","dimensions","timeDimensions","td","granularity","undefined","main","granularities","title","QueryBuilder","metaError","isFetchingMeta","meta","updateQuery","defaultQuery","chartType","defaultChartType","validatedQuery","missingMembers","dryRunResponse","vizState","initialVizState","orderMembersOrderKeys","prevContext","fetchMeta","schemaVersion","onSchemaChange","newMeta","refresh","getQueryMembers","member","resolvedMember","resolveMember","filter","Boolean","queryRendererProps","getName","toTimeDimension","rangeSelection","compareDateRange","dateRange","dimension","toFilter","operator","values","updateMethods","memberType","toQuery","add","concat","remove","members","splice","update","updateWith","queryError","pivotConfig","flatFilters","uniqBy","prop","flattenFilters","filters","m","i","operators","filterOperatorsForMember","measures","segments","availableMeasures","availableDimensions","availableSegments","availableFilterMembers","availableMembers","membersGroupedByCube","membersForQuery","indexedMeasures","indexBy","indexedDimensions","cubeNames","uniq","Object","keys","sort","cube","a","b","shortTitle","activeOrder","Array","isArray","order","fromEntries","orderMembers","id","find","availableTimeDimensions","type","queryUpdate","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateVizState","updateOrder","set","memberId","newOrder","orderMember","reduce","acc","reorder","sourceIndex","destinationIndex","nextArray","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","config","limit","setQuery","setVizState","stateQuery","statePivotConfig","finalState","applyStateChangeHeuristics","vizStateSent","handleVizStateChange","currentState","onVizStateChanged","newVizState","pick","clone","runSetters","shouldApplyHeuristicOrder","defaultOrder","ResultSet","getNormalizedPivotConfig","getMissingMembers","shouldFetchDryRun","dryRun","response","queryOrder","memo","current","pivotQuery","f","newState","sessionGranularity","defaultHeuristics","stateChangeHeuristics","disableHeuristics","wrapWithQueryRenderer","prepareRenderProps","currentQuery","CubeProvider","children","useDeepCompareMemoize","value","ref","useRef","useIsMounted","isMounted","useEffect","useCubeFetch","method","options","useContext","mutexRef","useState","setResponse","setError","skip","loadOptions","ignoreSkip","refetch","useCubeSql","useDryRun","useLazyDryRun","useCubeQuery","setCurrentQuery","setLoading","setResultSet","progress","setProgress","subscribeRequest","progressCallback","progressResponse","fetch","loadQuery","areQueriesEqual","unsubscribe","subscribe","e","previousQuery"],"mappings":"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"}