{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport React, { createContext, useRef, useEffect, useContext, useState } from 'react';\nimport { equals, toPairs, fromPairs, uniqBy, prop, indexBy, uniq, pick, clone } from 'ramda';\nimport { isQueryPresent, getQueryMembers, flattenFilters, moveItemInArray, movePivotItem, ResultSet, defaultOrder, defaultHeuristics, areQueriesEqual } from '@cubejs-client/core';\nimport Anser from 'anser';\nimport { encode } from 'html-entities';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nvar CubeContext = /*#__PURE__*/createContext(null);\nvar colors = {\n  reset: 'orange',\n  black: 'black',\n  red: 'red',\n  green: 'green',\n  yellow: 'orange',\n  blue: 'blue',\n  magenta: 'magenta',\n  cyan: 'cyan',\n  gray: 'gray',\n  lightgrey: 'lightgrey',\n  darkgrey: 'darkgrey'\n};\nvar anserMap = {\n  'ansi-bright-black': 'black',\n  'ansi-bright-yellow': 'yellow',\n  'ansi-yellow': 'yellow',\n  'ansi-bright-green': 'green',\n  'ansi-green': 'green',\n  'ansi-bright-cyan': 'cyan',\n  'ansi-cyan': 'cyan',\n  'ansi-bright-red': 'red',\n  'ansi-red': 'red',\n  'ansi-bright-magenta': 'magenta',\n  'ansi-magenta': 'magenta',\n  'ansi-white': 'darkgrey'\n};\n\nfunction generateAnsiHTML(txt) {\n  var arr = new Anser().ansiToJson(encode(txt), {\n    use_classes: true\n  });\n  var result = '';\n  var open = false;\n\n  for (var index = 0; index < arr.length; ++index) {\n    var c = arr[index];\n    var content = c.content;\n    var fg = c.fg;\n    var contentParts = content.split('\\n');\n\n    for (var j = 0; j < contentParts.length; ++j) {\n      if (!open) {\n        result += '<span data-ansi-line=\"true\">';\n        open = true;\n      }\n\n      var part = contentParts[j].replace('\\r', '');\n      var color = colors[anserMap[fg]];\n\n      if (color != null) {\n        result += \"<span style=\\\"color: \".concat(color, \";\\\">\").concat(part, \"</span>\");\n      } else {\n        if (fg != null) {\n          console.log('Missing color mapping: ', fg);\n        }\n\n        result += \"<span>\".concat(part, \"</span>\");\n      }\n\n      if (j < contentParts.length - 1) {\n        result += '</span>';\n        open = false;\n        result += '<br/>';\n      }\n    }\n  }\n\n  if (open) {\n    result += '</span>';\n  }\n\n  return result;\n}\n\nfunction ownKeys$6(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$6(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$6(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$6(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar QueryRenderer = /*#__PURE__*/function (_React$Component) {\n  _inherits(QueryRenderer, _React$Component);\n\n  var _super = _createSuper$1(QueryRenderer);\n\n  function QueryRenderer(props) {\n    var _this;\n\n    _classCallCheck(this, QueryRenderer);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.mutexObj = {};\n    return _this;\n  }\n\n  _createClass(QueryRenderer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          query = _this$props.query,\n          queries = _this$props.queries;\n\n      if (query) {\n        this.load(query);\n      }\n\n      if (queries) {\n        this.loadQueries(queries);\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$props2 = this.props,\n          query = _this$props2.query,\n          queries = _this$props2.queries,\n          render = _this$props2.render,\n          cubejsApi = _this$props2.cubejsApi,\n          loadSql = _this$props2.loadSql,\n          updateOnlyOnStateChange = _this$props2.updateOnlyOnStateChange;\n\n      if (!updateOnlyOnStateChange) {\n        return true;\n      }\n\n      return !equals(nextProps.query, query) || !equals(nextProps.queries, queries) || (nextProps.render == null || render == null) && nextProps.render !== render || nextProps.cubejsApi !== cubejsApi || nextProps.loadSql !== loadSql || !equals(nextState, this.state) || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          query = _this$props3.query,\n          queries = _this$props3.queries;\n\n      if (!equals(prevProps.query, query)) {\n        this.load(query);\n      }\n\n      if (!equals(prevProps.queries, queries)) {\n        this.loadQueries(queries);\n      }\n    }\n  }, {\n    key: \"cubejsApi\",\n    value: function cubejsApi() {\n      // eslint-disable-next-line react/destructuring-assignment\n      return this.props.cubejsApi || this.context && this.context.cubejsApi;\n    }\n  }, {\n    key: \"load\",\n    value: function load(query) {\n      var _this2 = this;\n\n      var resetResultSetOnChange = this.props.resetResultSetOnChange;\n      this.setState(_objectSpread$6({\n        isLoading: true,\n        error: null,\n        sqlQuery: null\n      }, resetResultSetOnChange ? {\n        resultSet: null\n      } : {}));\n      var loadSql = this.props.loadSql;\n      var cubejsApi = this.cubejsApi();\n\n      if (query && isQueryPresent(query)) {\n        if (loadSql === 'only') {\n          cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql'\n          }).then(function (sqlQuery) {\n            return _this2.setState({\n              sqlQuery: sqlQuery,\n              error: null,\n              isLoading: false\n            });\n          })[\"catch\"](function (error) {\n            return _this2.setState(_objectSpread$6(_objectSpread$6({}, resetResultSetOnChange ? {\n              resultSet: null\n            } : {}), {}, {\n              error: error,\n              isLoading: false\n            }));\n          });\n        } else if (loadSql) {\n          Promise.all([cubejsApi.sql(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'sql'\n          }), cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query'\n          })]).then(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                sqlQuery = _ref2[0],\n                resultSet = _ref2[1];\n\n            return _this2.setState({\n              sqlQuery: sqlQuery,\n              resultSet: resultSet,\n              error: null,\n              isLoading: false\n            });\n          })[\"catch\"](function (error) {\n            return _this2.setState(_objectSpread$6(_objectSpread$6({}, resetResultSetOnChange ? {\n              resultSet: null\n            } : {}), {}, {\n              error: error,\n              isLoading: false\n            }));\n          });\n        } else {\n          cubejsApi.load(query, {\n            mutexObj: this.mutexObj,\n            mutexKey: 'query'\n          }).then(function (resultSet) {\n            return _this2.setState({\n              resultSet: resultSet,\n              error: null,\n              isLoading: false\n            });\n          })[\"catch\"](function (error) {\n            return _this2.setState(_objectSpread$6(_objectSpread$6({}, resetResultSetOnChange ? {\n              resultSet: null\n            } : {}), {}, {\n              error: error,\n              isLoading: false\n            }));\n          });\n        }\n      }\n    }\n  }, {\n    key: \"loadQueries\",\n    value: function loadQueries(queries) {\n      var _this3 = this;\n\n      var cubejsApi = this.cubejsApi();\n      var resetResultSetOnChange = this.props.resetResultSetOnChange;\n      this.setState(_objectSpread$6(_objectSpread$6({\n        isLoading: true\n      }, resetResultSetOnChange ? {\n        resultSet: null\n      } : {}), {}, {\n        error: null\n      }));\n      var resultPromises = Promise.all(toPairs(queries).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            name = _ref4[0],\n            query = _ref4[1];\n\n        return cubejsApi.load(query, {\n          mutexObj: _this3.mutexObj,\n          mutexKey: name\n        }).then(function (r) {\n          return [name, r];\n        });\n      }));\n      resultPromises.then(function (resultSet) {\n        return _this3.setState({\n          resultSet: fromPairs(resultSet),\n          error: null,\n          isLoading: false\n        });\n      })[\"catch\"](function (error) {\n        return _this3.setState(_objectSpread$6(_objectSpread$6({}, resetResultSetOnChange ? {\n          resultSet: null\n        } : {}), {}, {\n          error: error,\n          isLoading: false\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          queries = _this$state.queries,\n          resultSet = _this$state.resultSet,\n          isLoading = _this$state.isLoading,\n          sqlQuery = _this$state.sqlQuery;\n      var render = this.props.render;\n      var loadState = {\n        error: error ? new Error(generateAnsiHTML(error.message || error.toString())) : null,\n        resultSet: queries ? resultSet || {} : resultSet,\n        loadingState: {\n          isLoading: isLoading\n        },\n        sqlQuery: sqlQuery\n      };\n\n      if (render) {\n        return render(loadState);\n      }\n\n      return null;\n    }\n  }], [{\n    key: \"isQueryPresent\",\n    value: // @deprected use `isQueryPresent` from `@cubejs-client/core`\n    function isQueryPresent$1(query) {\n      return isQueryPresent(query);\n    }\n  }]);\n\n  return QueryRenderer;\n}(React.Component);\n\nQueryRenderer.contextType = CubeContext;\nQueryRenderer.defaultProps = {\n  cubejsApi: null,\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null,\n  updateOnlyOnStateChange: false,\n  resetResultSetOnChange: true\n};\nvar _excluded$1 = [\"query\"];\n\nfunction ownKeys$5(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$5(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$5(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$5(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar QueryRendererWithTotals = function QueryRendererWithTotals(_ref) {\n  var query = _ref.query,\n      restProps = _objectWithoutProperties(_ref, _excluded$1);\n\n  return /*#__PURE__*/React.createElement(QueryRenderer, _extends({\n    queries: {\n      totals: _objectSpread$5(_objectSpread$5({}, query), {}, {\n        dimensions: [],\n        timeDimensions: query.timeDimensions ? query.timeDimensions.map(function (td) {\n          return _objectSpread$5(_objectSpread$5({}, td), {}, {\n            granularity: null\n          });\n        }) : undefined\n      }),\n      main: query\n    }\n  }, restProps));\n};\n\nQueryRendererWithTotals.defaultProps = {\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null\n};\n\nfunction ownKeys$4(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$4(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$4(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$4(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar granularities = [{\n  name: undefined,\n  title: 'w/o grouping'\n}, {\n  name: 'second',\n  title: 'Second'\n}, {\n  name: 'minute',\n  title: 'Minute'\n}, {\n  name: 'hour',\n  title: 'Hour'\n}, {\n  name: 'day',\n  title: 'Day'\n}, {\n  name: 'week',\n  title: 'Week'\n}, {\n  name: 'month',\n  title: 'Month'\n}, {\n  name: 'year',\n  title: 'Year'\n}];\n\nvar QueryBuilder = /*#__PURE__*/function (_React$Component) {\n  _inherits(QueryBuilder, _React$Component);\n\n  var _super = _createSuper(QueryBuilder);\n\n  function QueryBuilder(props) {\n    var _this;\n\n    _classCallCheck(this, QueryBuilder);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchMeta\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var meta, metaError;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.cubejsApi()) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              metaError = null;\n              _context.prev = 3;\n\n              _this.setState({\n                isFetchingMeta: true\n              });\n\n              _context.next = 7;\n              return _this.cubejsApi().meta();\n\n            case 7:\n              meta = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              metaError = _context.t0;\n\n            case 13:\n              _this.setState({\n                meta: meta,\n                metaError: metaError ? new Error(generateAnsiHTML(metaError.message || metaError.toString())) : null,\n                isFetchingMeta: false\n              }, function () {\n                // Run update query to force viz state update\n                // This will catch any new missing members, and also validate the query against the new meta\n                _this.updateQuery({});\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    })));\n\n    _this.state = _objectSpread$4(_objectSpread$4({\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query,\n      // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null\n    }, props.vizState), props.initialVizState);\n    _this.mutexObj = {};\n    _this.orderMembersOrderKeys = [];\n    return _this;\n  }\n\n  _createClass(QueryBuilder, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.prevContext = this.context;\n                _context2.next = 3;\n                return this.fetchMeta();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(prevProps) {\n        var _this$prevContext,\n            _this$context,\n            _this2 = this;\n\n        var _this$props, schemaVersion, onSchemaChange, meta, newMeta;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$props = this.props, schemaVersion = _this$props.schemaVersion, onSchemaChange = _this$props.onSchemaChange;\n                meta = this.state.meta;\n\n                if (!(((_this$prevContext = this.prevContext) === null || _this$prevContext === void 0 ? void 0 : _this$prevContext.cubejsApi) !== ((_this$context = this.context) === null || _this$context === void 0 ? void 0 : _this$context.cubejsApi))) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                this.prevContext = this.context;\n                _context4.next = 6;\n                return this.fetchMeta();\n\n              case 6:\n                if (!(prevProps.schemaVersion !== schemaVersion)) {\n                  _context4.next = 17;\n                  break;\n                }\n\n                _context4.prev = 7;\n                _context4.next = 10;\n                return this.cubejsApi().meta();\n\n              case 10:\n                newMeta = _context4.sent;\n\n                if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n                  onSchemaChange({\n                    schemaVersion: schemaVersion,\n                    refresh: function () {\n                      var _refresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                _context3.next = 2;\n                                return _this2.fetchMeta();\n\n                              case 2:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, _callee3);\n                      }));\n\n                      function refresh() {\n                        return _refresh.apply(this, arguments);\n                      }\n\n                      return refresh;\n                    }()\n                  });\n                }\n\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](7); // eslint-disable-next-line\n\n                this.setState({\n                  metaError: _context4.t0\n                });\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[7, 14]]);\n      }));\n\n      function componentDidUpdate(_x) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"cubejsApi\",\n    value: function cubejsApi() {\n      var cubejsApi = this.props.cubejsApi; // eslint-disable-next-line react/destructuring-assignment\n\n      return cubejsApi || this.context && this.context.cubejsApi;\n    }\n  }, {\n    key: \"getMissingMembers\",\n    value: function getMissingMembers(query, meta) {\n      if (!meta) {\n        return [];\n      }\n\n      return getQueryMembers(query).map(function (member) {\n        var resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n\n        if (resolvedMember.error) {\n          return member;\n        }\n\n        return false;\n      }).filter(Boolean);\n    }\n  }, {\n    key: \"isQueryPresent\",\n    value: function isQueryPresent() {\n      var query = this.state.query;\n      return QueryRenderer.isQueryPresent(query);\n    }\n  }, {\n    key: \"prepareRenderProps\",\n    value: function prepareRenderProps(queryRendererProps) {\n      var _this3 = this;\n\n      var getName = function getName(member) {\n        return member.name;\n      };\n\n      var toTimeDimension = function toTimeDimension(member) {\n        var rangeSelection = member.compareDateRange ? {\n          compareDateRange: member.compareDateRange\n        } : {\n          dateRange: member.dateRange\n        };\n        return _objectSpread$4({\n          dimension: member.dimension.name,\n          granularity: member.granularity\n        }, rangeSelection);\n      };\n\n      var toFilter = function toFilter(member) {\n        var _member$member, _member$dimension;\n\n        return {\n          member: ((_member$member = member.member) === null || _member$member === void 0 ? void 0 : _member$member.name) || ((_member$dimension = member.dimension) === null || _member$dimension === void 0 ? void 0 : _member$dimension.name),\n          operator: member.operator,\n          values: member.values\n        };\n      };\n\n      var updateMethods = function updateMethods(memberType) {\n        var toQuery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getName;\n        return {\n          add: function add(member) {\n            var query = _this3.state.query;\n\n            _this3.updateQuery(_defineProperty({}, memberType, (query[memberType] || []).concat(toQuery(member))));\n          },\n          remove: function remove(member) {\n            var query = _this3.state.query;\n            var members = (query[memberType] || []).concat([]);\n            members.splice(member.index, 1);\n            return _this3.updateQuery(_defineProperty({}, memberType, members));\n          },\n          update: function update(member, updateWith) {\n            var query = _this3.state.query;\n            var members = (query[memberType] || []).concat([]);\n            members.splice(member.index, 1, toQuery(updateWith));\n            return _this3.updateQuery(_defineProperty({}, memberType, members));\n          }\n        };\n      };\n\n      var _this$state = this.state,\n          meta = _this$state.meta,\n          metaError = _this$state.metaError,\n          query = _this$state.query,\n          queryError = _this$state.queryError,\n          chartType = _this$state.chartType,\n          pivotConfig = _this$state.pivotConfig,\n          validatedQuery = _this$state.validatedQuery,\n          missingMembers = _this$state.missingMembers,\n          isFetchingMeta = _this$state.isFetchingMeta,\n          dryRunResponse = _this$state.dryRunResponse;\n      var flatFilters = uniqBy(function (filter) {\n        return \"\".concat(prop('member', filter)).concat(prop('operator', filter));\n      }, flattenFilters(meta && query.filters || []).map(function (filter) {\n        return _objectSpread$4(_objectSpread$4({}, filter), {}, {\n          member: filter.member || filter.dimension\n        });\n      }));\n      var filters = flatFilters.map(function (m, i) {\n        return _objectSpread$4(_objectSpread$4({}, m), {}, {\n          dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n          operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n          index: i\n        });\n      });\n      var measures = QueryBuilder.resolveMember('measures', this.state);\n      var dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n      var timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n      var segments = (meta && query.segments || []).map(function (m, i) {\n        return _objectSpread$4({\n          index: i\n        }, meta.resolveMember(m, 'segments'));\n      });\n      var availableMeasures = [];\n      var availableDimensions = [];\n      var availableSegments = [];\n      var availableFilterMembers = [];\n      var availableMembers = (meta === null || meta === void 0 ? void 0 : meta.membersGroupedByCube()) || {\n        measures: [],\n        dimensions: [],\n        segments: [],\n        timeDimensions: []\n      };\n\n      if (meta) {\n        availableMeasures = meta.membersForQuery(query, 'measures');\n        availableDimensions = meta.membersForQuery(query, 'dimensions');\n        availableSegments = meta.membersForQuery(query, 'segments');\n        var indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n        var indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n        var cubeNames = uniq([].concat(_toConsumableArray(Object.keys(indexedMeasures)), _toConsumableArray(Object.keys(indexedDimensions)))).sort();\n        availableFilterMembers = cubeNames.map(function (name) {\n          var _indexedMeasures$name, _indexedDimensions$na;\n\n          var cube = indexedMeasures[name] || indexedDimensions[name];\n          return _objectSpread$4(_objectSpread$4({}, cube), {}, {\n            members: [].concat(_toConsumableArray((_indexedMeasures$name = indexedMeasures[name]) === null || _indexedMeasures$name === void 0 ? void 0 : _indexedMeasures$name.members), _toConsumableArray((_indexedDimensions$na = indexedDimensions[name]) === null || _indexedDimensions$na === void 0 ? void 0 : _indexedDimensions$na.members)).sort(function (a, b) {\n              return a.shortTitle > b.shortTitle ? 1 : -1;\n            })\n          });\n        });\n      }\n\n      var activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n      var members = [].concat(_toConsumableArray(measures), _toConsumableArray(dimensions), _toConsumableArray(timeDimensions.map(function (_ref2) {\n        var dimension = _ref2.dimension;\n        return dimension;\n      })));\n      var orderMembers = uniqBy(prop('id'), _toConsumableArray(members.map(function (_ref3) {\n        var name = _ref3.name,\n            title = _ref3.title;\n        return {\n          id: name,\n          title: title,\n          order: (activeOrder === null || activeOrder === void 0 ? void 0 : activeOrder[name]) || 'none'\n        };\n      })));\n\n      if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n        this.orderMembersOrderKeys = orderMembers.map(function (_ref4) {\n          var id = _ref4.id;\n          return id;\n        });\n      }\n\n      if (this.orderMembersOrderKeys.length) {\n        // Preserve order until the members change or manually re-ordered\n        // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n        orderMembers = (this.orderMembersOrderKeys || []).map(function (id) {\n          return orderMembers.find(function (member) {\n            return member.id === id;\n          });\n        });\n      }\n\n      return _objectSpread$4({\n        meta: meta,\n        metaError: metaError,\n        query: query,\n        error: queryError,\n        // Match same name as QueryRenderer prop\n        validatedQuery: validatedQuery,\n        isQueryPresent: this.isQueryPresent(),\n        chartType: chartType,\n        measures: measures,\n        dimensions: dimensions,\n        timeDimensions: timeDimensions,\n        segments: segments,\n        filters: filters,\n        orderMembers: orderMembers,\n        availableMeasures: availableMeasures,\n        availableDimensions: availableDimensions,\n        availableTimeDimensions: availableDimensions.filter(function (m) {\n          return m.type === 'time';\n        }),\n        availableSegments: availableSegments,\n        availableMembers: availableMembers,\n        availableFilterMembers: availableFilterMembers,\n        updateQuery: function updateQuery(queryUpdate) {\n          return _this3.updateQuery(queryUpdate);\n        },\n        updateMeasures: updateMethods('measures'),\n        updateDimensions: updateMethods('dimensions'),\n        updateSegments: updateMethods('segments'),\n        updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n        updateFilters: updateMethods('filters', toFilter),\n        updateChartType: function updateChartType(newChartType) {\n          return _this3.updateVizState({\n            chartType: newChartType\n          });\n        },\n        updateOrder: {\n          set: function set(memberId) {\n            var newOrder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n\n            _this3.updateQuery({\n              order: orderMembers.map(function (orderMember) {\n                return _objectSpread$4(_objectSpread$4({}, orderMember), {}, {\n                  order: orderMember.id === memberId ? newOrder : orderMember.order\n                });\n              }).reduce(function (acc, _ref5) {\n                var id = _ref5.id,\n                    order = _ref5.order;\n                return order !== 'none' ? [].concat(_toConsumableArray(acc), [[id, order]]) : acc;\n              }, [])\n            });\n          },\n          update: function update(order) {\n            _this3.updateQuery({\n              order: order\n            });\n          },\n          reorder: function reorder(sourceIndex, destinationIndex) {\n            if (sourceIndex == null || destinationIndex == null) {\n              return;\n            }\n\n            var nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n            _this3.orderMembersOrderKeys = nextArray.map(function (_ref6) {\n              var id = _ref6.id;\n              return id;\n            });\n\n            _this3.updateQuery({\n              order: nextArray.reduce(function (acc, _ref7) {\n                var id = _ref7.id,\n                    order = _ref7.order;\n                return order !== 'none' ? [].concat(_toConsumableArray(acc), [[id, order]]) : acc;\n              }, [])\n            });\n          }\n        },\n        pivotConfig: pivotConfig,\n        updatePivotConfig: {\n          moveItem: function moveItem(_ref8) {\n            var sourceIndex = _ref8.sourceIndex,\n                destinationIndex = _ref8.destinationIndex,\n                sourceAxis = _ref8.sourceAxis,\n                destinationAxis = _ref8.destinationAxis;\n\n            _this3.updateVizState({\n              pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis)\n            });\n          },\n          update: function update(config) {\n            var limit = config.limit;\n\n            _this3.updateVizState(_objectSpread$4({\n              pivotConfig: _objectSpread$4(_objectSpread$4({}, pivotConfig), config)\n            }, limit ? {\n              query: _objectSpread$4(_objectSpread$4({}, query), {}, {\n                limit: limit\n              })\n            } : null));\n          }\n        },\n        missingMembers: missingMembers,\n        refresh: this.fetchMeta,\n        isFetchingMeta: isFetchingMeta,\n        dryRunResponse: dryRunResponse\n      }, queryRendererProps);\n    }\n  }, {\n    key: \"updateQuery\",\n    value: function updateQuery(queryUpdate) {\n      var query = this.state.query;\n      this.updateVizState({\n        query: _objectSpread$4(_objectSpread$4({}, query), queryUpdate)\n      });\n    }\n  }, {\n    key: \"updateVizState\",\n    value: function () {\n      var _updateVizState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(state) {\n        var _this4 = this;\n\n        var _this$props2, setQuery, setVizState, _this$state2, stateQuery, statePivotConfig, chartType, meta, finalState, vizStateSent, handleVizStateChange, runSetters, shouldFetchDryRun, response;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this$props2 = this.props, setQuery = _this$props2.setQuery, setVizState = _this$props2.setVizState;\n                _this$state2 = this.state, stateQuery = _this$state2.query, statePivotConfig = _this$state2.pivotConfig, chartType = _this$state2.chartType, meta = _this$state2.meta;\n                finalState = this.applyStateChangeHeuristics(state);\n\n                if (!finalState.query) {\n                  finalState.query = _objectSpread$4({}, stateQuery);\n                }\n\n                vizStateSent = null;\n\n                handleVizStateChange = function handleVizStateChange(currentState) {\n                  var onVizStateChanged = _this4.props.onVizStateChanged;\n\n                  if (onVizStateChanged) {\n                    var newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState); // Don't run callbacks more than once unless the viz state has changed since last time\n\n                    if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n                      onVizStateChanged(newVizState); // use clone to make sure we don't save object references\n\n                      vizStateSent = clone(newVizState);\n                    }\n                  }\n                }; // deprecated, setters replaced by onVizStateChanged\n\n\n                runSetters = function runSetters(currentState) {\n                  if (setVizState) {\n                    setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n                  }\n\n                  if (currentState.query && setQuery) {\n                    setQuery(currentState.query);\n                  }\n                };\n\n                if (finalState.shouldApplyHeuristicOrder) {\n                  finalState.query.order = defaultOrder(finalState.query);\n                }\n\n                finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(finalState.query, finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig);\n                finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n                finalState.chartType = finalState.chartType || state.chartType || chartType; // deprecated\n\n                runSetters(_objectSpread$4(_objectSpread$4({}, state), {}, {\n                  query: finalState.query\n                })); // Update optimistically so that UI does not stutter\n\n                this.setState(_objectSpread$4(_objectSpread$4({}, finalState), {}, {\n                  queryError: null\n                }));\n                handleVizStateChange(finalState);\n                shouldFetchDryRun = !equals(pick(['measures', 'dimensions', 'timeDimensions'], stateQuery), pick(['measures', 'dimensions', 'timeDimensions'], finalState.query));\n\n                if (!(shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0)) {\n                  _context5.next = 30;\n                  break;\n                }\n\n                _context5.prev = 16;\n                _context5.next = 19;\n                return this.cubejsApi().dryRun(finalState.query, {\n                  mutexObj: this.mutexObj\n                });\n\n              case 19:\n                response = _context5.sent;\n\n                if (finalState.shouldApplyHeuristicOrder) {\n                  finalState.query.order = (response.queryOrder || []).reduce(function (memo, current) {\n                    return _objectSpread$4(_objectSpread$4({}, memo), current);\n                  }, {});\n                }\n\n                finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n                finalState.validatedQuery = this.validatedQuery(finalState);\n                finalState.dryRunResponse = response; // deprecated\n\n                if (isQueryPresent(stateQuery)) {\n                  runSetters(_objectSpread$4(_objectSpread$4({}, this.state), finalState));\n                }\n\n                _context5.next = 30;\n                break;\n\n              case 27:\n                _context5.prev = 27;\n                _context5.t0 = _context5[\"catch\"](16);\n                this.setState({\n                  queryError: new Error(generateAnsiHTML(_context5.t0.message || _context5.t0.toString()))\n                });\n\n              case 30:\n                this.setState(finalState, function () {\n                  return handleVizStateChange(_this4.state);\n                });\n\n              case 31:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[16, 27]]);\n      }));\n\n      function updateVizState(_x2) {\n        return _updateVizState.apply(this, arguments);\n      }\n\n      return updateVizState;\n    }()\n  }, {\n    key: \"validatedQuery\",\n    value: function validatedQuery(state) {\n      var _ref9 = state || this.state,\n          query = _ref9.query;\n\n      return _objectSpread$4(_objectSpread$4({}, query), {}, {\n        filters: (query.filters || []).filter(function (f) {\n          return f.operator;\n        })\n      });\n    }\n  }, {\n    key: \"defaultHeuristics\",\n    value: function defaultHeuristics$1(newState) {\n      var _this$state3 = this.state,\n          query = _this$state3.query,\n          sessionGranularity = _this$state3.sessionGranularity,\n          meta = _this$state3.meta;\n      return defaultHeuristics(newState, query, {\n        meta: meta,\n        sessionGranularity: sessionGranularity || 'day'\n      });\n    }\n  }, {\n    key: \"applyStateChangeHeuristics\",\n    value: function applyStateChangeHeuristics(newState) {\n      var _this$props3 = this.props,\n          stateChangeHeuristics = _this$props3.stateChangeHeuristics,\n          disableHeuristics = _this$props3.disableHeuristics;\n\n      if (disableHeuristics) {\n        return newState;\n      }\n\n      return stateChangeHeuristics && stateChangeHeuristics(this.state, newState) || this.defaultHeuristics(newState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var query = this.state.query;\n      var _this$props4 = this.props,\n          cubejsApi = _this$props4.cubejsApi,\n          _render = _this$props4.render,\n          wrapWithQueryRenderer = _this$props4.wrapWithQueryRenderer;\n\n      if (wrapWithQueryRenderer) {\n        return /*#__PURE__*/React.createElement(QueryRenderer, {\n          query: query,\n          cubejsApi: cubejsApi,\n          resetResultSetOnChange: false,\n          render: function render(queryRendererProps) {\n            if (_render) {\n              return _render(_this5.prepareRenderProps(queryRendererProps));\n            }\n\n            return null;\n          }\n        });\n      } else {\n        if (_render) {\n          return _render(this.prepareRenderProps());\n        }\n\n        return null;\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: // This is an anti-pattern, only kept for backward compatibility\n    // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n    function getDerivedStateFromProps(props, state) {\n      if (props.query || props.vizState) {\n        var nextState = _objectSpread$4(_objectSpread$4({}, state), props.vizState || {});\n\n        if (Array.isArray(props.query)) {\n          throw new Error('Array of queries is not supported.');\n        }\n\n        return _objectSpread$4(_objectSpread$4({}, nextState), {}, {\n          query: _objectSpread$4(_objectSpread$4({}, nextState.query), props.query || {})\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"resolveMember\",\n    value: function resolveMember(type, _ref10) {\n      var meta = _ref10.meta,\n          query = _ref10.query;\n\n      if (!meta) {\n        return [];\n      }\n\n      if (Array.isArray(query)) {\n        return query.reduce(function (memo, currentQuery) {\n          return memo.concat(QueryBuilder.resolveMember(type, {\n            meta: meta,\n            query: currentQuery\n          }));\n        }, []);\n      }\n\n      if (type === 'timeDimensions') {\n        return (query.timeDimensions || []).map(function (m, index) {\n          return _objectSpread$4(_objectSpread$4({}, m), {}, {\n            dimension: _objectSpread$4(_objectSpread$4({}, meta.resolveMember(m.dimension, 'dimensions')), {}, {\n              granularities: granularities\n            }),\n            index: index\n          });\n        });\n      }\n\n      return (query[type] || []).map(function (m, index) {\n        return _objectSpread$4({\n          index: index\n        }, meta.resolveMember(m, type));\n      });\n    }\n  }]);\n\n  return QueryBuilder;\n}(React.Component);\n\n_defineProperty(QueryBuilder, \"contextType\", CubeContext);\n\nQueryBuilder.defaultProps = {\n  cubejsApi: null,\n  stateChangeHeuristics: null,\n  disableHeuristics: false,\n  render: null,\n  wrapWithQueryRenderer: true,\n  defaultChartType: 'line',\n  defaultQuery: {},\n  initialVizState: null,\n  onVizStateChanged: null,\n  // deprecated\n  query: null,\n  setQuery: null,\n  vizState: null,\n  setVizState: null\n};\n\nfunction CubeProvider(_ref) {\n  var cubejsApi = _ref.cubejsApi,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(CubeContext.Provider, {\n    value: {\n      cubejsApi: cubejsApi\n    }\n  }, children);\n}\n\nfunction useDeepCompareMemoize(value) {\n  var ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nfunction useIsMounted() {\n  var isMounted = useRef(true);\n  useEffect(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return function () {\n    return isMounted.current;\n  };\n}\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useCubeFetch(method) {\n  var _options$query;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isMounted = useIsMounted();\n  var context = useContext(CubeContext);\n  var mutexRef = useRef({});\n\n  var _useState = useState({\n    isLoading: false,\n    response: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _options$skip = options.skip,\n      skip = _options$skip === void 0 ? false : _options$skip;\n\n  function load() {\n    return _load.apply(this, arguments);\n  }\n\n  function _load() {\n    _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var loadOptions,\n          ignoreSkip,\n          cubejsApi,\n          query,\n          _response,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loadOptions = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              ignoreSkip = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              cubejsApi = options.cubejsApi || (context === null || context === void 0 ? void 0 : context.cubejsApi);\n              query = loadOptions.query || options.query;\n\n              if (cubejsApi) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error('Cube.js API client is not provided');\n\n            case 6:\n              if (!((ignoreSkip || !skip) && query && isQueryPresent(query))) {\n                _context.next = 19;\n                break;\n              }\n\n              setError(null);\n              setResponse({\n                isLoading: true,\n                response: null\n              });\n              _context.prev = 9;\n              _context.next = 12;\n              return cubejsApi[method](query, {\n                mutexObj: mutexRef.current,\n                mutexKey: method\n              });\n\n            case 12:\n              _response = _context.sent;\n\n              if (isMounted()) {\n                setResponse({\n                  response: _response,\n                  isLoading: false\n                });\n              }\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](9);\n\n              if (isMounted()) {\n                setError(_context.t0);\n                setResponse({\n                  isLoading: false,\n                  response: null\n                });\n              }\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 16]]);\n    }));\n    return _load.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    load();\n  }, useDeepCompareMemoize([Object.keys(((_options$query = options.query) === null || _options$query === void 0 ? void 0 : _options$query.order) || {}), options, context]));\n  return _objectSpread$3(_objectSpread$3({}, response), {}, {\n    error: error,\n    refetch: function refetch(options) {\n      return load(options, true);\n    }\n  });\n}\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useCubeSql(query) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useCubeFetch('sql', _objectSpread$2(_objectSpread$2({}, options), {}, {\n    query: query\n  }));\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useDryRun(query) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useCubeFetch('dryRun', _objectSpread$1(_objectSpread$1({}, options), {}, {\n    query: query\n  }));\n}\n\nvar _excluded = [\"refetch\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useLazyDryRun(query) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useCubeFetch = useCubeFetch('dryRun', _objectSpread(_objectSpread({}, options), {}, {\n    query: query,\n    skip: true\n  })),\n      refetch = _useCubeFetch.refetch,\n      result = _objectWithoutProperties(_useCubeFetch, _excluded);\n\n  return [refetch, result];\n}\n\nfunction useCubeQuery(query) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var mutexRef = useRef({});\n  var isMounted = useRef(true);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuery = _useState2[0],\n      setCurrentQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resultSet = _useState6[0],\n      setResultSet = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      progress = _useState8[0],\n      setProgress = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var context = useContext(CubeContext);\n  var subscribeRequest = null;\n\n  var progressCallback = function progressCallback(_ref) {\n    var progressResponse = _ref.progressResponse;\n    return setProgress(progressResponse);\n  };\n\n  function fetch() {\n    return _fetch.apply(this, arguments);\n  }\n\n  function _fetch() {\n    _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resetResultSetOnChange, cubejsApi, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              resetResultSetOnChange = options.resetResultSetOnChange;\n              cubejsApi = options.cubejsApi || (context === null || context === void 0 ? void 0 : context.cubejsApi);\n\n              if (cubejsApi) {\n                _context2.next = 4;\n                break;\n              }\n\n              throw new Error('Cube.js API client is not provided');\n\n            case 4:\n              if (resetResultSetOnChange) {\n                setResultSet(null);\n              }\n\n              setError(null);\n              setLoading(true);\n              _context2.prev = 7;\n              _context2.next = 10;\n              return cubejsApi.load(query, {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback: progressCallback\n              });\n\n            case 10:\n              response = _context2.sent;\n\n              if (isMounted.current) {\n                setResultSet(response);\n                setProgress(null);\n              }\n\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](7);\n\n              if (isMounted.current) {\n                setError(_context2.t0);\n                setResultSet(null);\n                setProgress(null);\n              }\n\n            case 17:\n              if (isMounted.current) {\n                setLoading(false);\n              }\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[7, 14]]);\n    }));\n    return _fetch.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(function () {\n    var _options$skip = options.skip,\n        skip = _options$skip === void 0 ? false : _options$skip,\n        resetResultSetOnChange = options.resetResultSetOnChange;\n    var cubejsApi = options.cubejsApi || (context === null || context === void 0 ? void 0 : context.cubejsApi);\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    function loadQuery() {\n      return _loadQuery.apply(this, arguments);\n    }\n\n    function _loadQuery() {\n      _loadQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!skip && isQueryPresent(query))) {\n                  _context.next = 20;\n                  break;\n                }\n\n                if (!areQueriesEqual(currentQuery, query)) {\n                  if (resetResultSetOnChange == null || resetResultSetOnChange) {\n                    setResultSet(null);\n                  }\n\n                  setCurrentQuery(query);\n                }\n\n                setError(null);\n                setLoading(true);\n                _context.prev = 4;\n\n                if (!subscribeRequest) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return subscribeRequest.unsubscribe();\n\n              case 8:\n                subscribeRequest = null;\n\n              case 9:\n                if (!options.subscribe) {\n                  _context.next = 13;\n                  break;\n                }\n\n                subscribeRequest = cubejsApi.subscribe(query, {\n                  mutexObj: mutexRef.current,\n                  mutexKey: 'query',\n                  progressCallback: progressCallback\n                }, function (e, result) {\n                  if (isMounted.current) {\n                    if (e) {\n                      setError(e);\n                    } else {\n                      setResultSet(result);\n                    }\n\n                    setLoading(false);\n                    setProgress(null);\n                  }\n                });\n                _context.next = 15;\n                break;\n\n              case 13:\n                _context.next = 15;\n                return fetch();\n\n              case 15:\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](4);\n\n                if (isMounted.current) {\n                  setError(_context.t0);\n                  setResultSet(null);\n                  setLoading(false);\n                  setProgress(null);\n                }\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 17]]);\n      }));\n      return _loadQuery.apply(this, arguments);\n    }\n\n    loadQuery();\n    return function () {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys(query && query.order || {}), options, context]));\n  return {\n    isLoading: isLoading,\n    resultSet: resultSet,\n    error: error,\n    progress: progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n\nexport { CubeContext, CubeProvider, QueryBuilder, QueryRenderer, QueryRendererWithTotals, useCubeQuery, useCubeSql, useDryRun, useLazyDryRun };","map":{"version":3,"sources":["../src/CubeContext.js","../src/utils.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/is-mounted.js","../src/hooks/cube-fetch.js","../src/hooks/cube-sql.js","../src/hooks/dry-run.js","../src/hooks/lazy-dry-run.js","../src/hooks/cube-query.js"],"names":["createContext","colors","reset","black","red","green","yellow","blue","magenta","cyan","gray","lightgrey","darkgrey","anserMap","arr","encode","use_classes","result","open","index","c","content","fg","contentParts","j","part","color","console","QueryRenderer","React","Component","isQueryPresent","query","queries","render","cubejsApi","loadSql","updateOnlyOnStateChange","equals","nextProps","prevProps","resetResultSetOnChange","isLoading","error","sqlQuery","resultSet","mutexObj","mutexKey","Promise","resultPromises","name","fromPairs","loadState","generateAnsiHTML","loadingState","QueryRendererWithTotals","restProps","totals","dimensions","timeDimensions","granularity","undefined","main","granularities","title","QueryBuilder","CubeContext","props","nextState","Array","meta","currentQuery","type","dimension","m","chartType","validatedQuery","missingMembers","isFetchingMeta","dryRunResponse","schemaVersion","onSchemaChange","newMeta","refresh","metaError","resolvedMember","getName","member","toTimeDimension","rangeSelection","compareDateRange","dateRange","toFilter","operator","values","updateMethods","toQuery","add","remove","members","update","queryError","pivotConfig","flatFilters","uniqBy","prop","filter","filters","operators","i","measures","segments","availableMeasures","availableDimensions","availableSegments","availableFilterMembers","availableMembers","indexedMeasures","indexBy","indexedDimensions","cubeNames","uniq","Object","cube","a","b","activeOrder","orderMembers","id","order","availableTimeDimensions","updateQuery","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateOrder","set","newOrder","orderMember","reorder","sourceIndex","destinationIndex","nextArray","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","limit","config","setQuery","setVizState","stateQuery","statePivotConfig","finalState","vizStateSent","handleVizStateChange","onVizStateChanged","newVizState","pick","clone","runSetters","currentState","defaultOrder","ResultSet","state","shouldFetchDryRun","response","f","sessionGranularity","defaultHeuristics","stateChangeHeuristics","disableHeuristics","wrapWithQueryRenderer","defaultChartType","defaultQuery","initialVizState","vizState","children","ref","useRef","isMounted","useEffect","options","useIsMounted","context","useContext","mutexRef","setResponse","useState","setError","skip","loadOptions","ignoreSkip","method","load","useDeepCompareMemoize","refetch","useCubeFetch","setCurrentQuery","setLoading","setResultSet","progress","setProgress","subscribeRequest","progressCallback","progressResponse","areQueriesEqual","fetch","loadQuery","previousQuery"],"mappings":"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","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import Anser from 'anser';\nimport { encode } from 'html-entities';\n\nconst colors = {\n  reset: 'orange',\n  black: 'black',\n  red: 'red',\n  green: 'green',\n  yellow: 'orange',\n  blue: 'blue',\n  magenta: 'magenta',\n  cyan: 'cyan',\n  gray: 'gray',\n  lightgrey: 'lightgrey',\n  darkgrey: 'darkgrey',\n};\n\nconst anserMap = {\n  'ansi-bright-black': 'black',\n  'ansi-bright-yellow': 'yellow',\n  'ansi-yellow': 'yellow',\n  'ansi-bright-green': 'green',\n  'ansi-green': 'green',\n  'ansi-bright-cyan': 'cyan',\n  'ansi-cyan': 'cyan',\n  'ansi-bright-red': 'red',\n  'ansi-red': 'red',\n  'ansi-bright-magenta': 'magenta',\n  'ansi-magenta': 'magenta',\n  'ansi-white': 'darkgrey',\n};\n\nexport function generateAnsiHTML(txt) {\n  const arr = new Anser().ansiToJson(encode(txt), {\n    use_classes: true,\n  });\n\n  let result = '';\n  let open = false;\n  for (let index = 0; index < arr.length; ++index) {\n    const c = arr[index];\n    const { content } = c;\n    const { fg } = c;\n\n    const contentParts = content.split('\\n');\n    for (let j = 0; j < contentParts.length; ++j) {\n      if (!open) {\n        result += '<span data-ansi-line=\"true\">';\n        open = true;\n      }\n      const part = contentParts[j].replace('\\r', '');\n      const color = colors[anserMap[fg]];\n\n      if (color != null) {\n        result += `<span style=\"color: ${color};\">${part}</span>`;\n      } else {\n        if (fg != null) {\n          console.log('Missing color mapping: ', fg);\n        }\n\n        result += `<span>${part}</span>`;\n      }\n\n      if (j < contentParts.length - 1) {\n        result += '</span>';\n        open = false;\n        result += '<br/>';\n      }\n    }\n  }\n\n  if (open) {\n    result += '</span>';\n  }\n\n  return result;\n}\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\nimport { generateAnsiHTML } from './utils';\n\nexport default class QueryRenderer extends React.Component {\n  // @deprected use `isQueryPresent` from `@cubejs-client/core`\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubejsApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubejsApi !== cubejsApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubejsApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubejsApi || this.context && this.context.cubejsApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubejsApi = this.cubejsApi();\n\n    if (query && isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubejsApi = this.cubejsApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n\n    const loadState = {\n      error: error ? new Error(generateAnsiHTML(error.message || error.toString())) : null,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n\n    if (render) {\n      return render(loadState);\n    }\n\n    return null;\n  }\n}\n\nQueryRenderer.contextType = CubeContext;\n\nQueryRenderer.defaultProps = {\n  cubejsApi: null,\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null,\n  updateOnlyOnStateChange: false,\n  resetResultSetOnChange: true\n};\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nQueryRendererWithTotals.defaultProps = {\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null\n};\n\nexport default QueryRendererWithTotals;\n","import React from 'react';\nimport { clone, equals, indexBy, pick, prop, uniq, uniqBy } from 'ramda';\nimport {\n  defaultHeuristics,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  isQueryPresent,\n  moveItemInArray,\n  movePivotItem,\n  ResultSet\n} from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\nimport { generateAnsiHTML } from './utils';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  static contextType = CubeContext;\n\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n    this.orderMembersOrderKeys = [];\n  }\n\n  async componentDidMount() {\n    this.prevContext = this.context;\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (this.prevContext?.cubejsApi !== this.context?.cubejsApi) {\n      this.prevContext = this.context;\n      await this.fetchMeta();\n    }\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubejsApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    if (!this.cubejsApi()) {\n      return;\n    }\n\n    let meta;\n    let metaError = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubejsApi().meta();\n    } catch (error) {\n      metaError = error;\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError: metaError ? new Error(generateAnsiHTML(metaError.message || metaError.toString())) : null,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubejsApi() {\n    const { cubejsApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubejsApi || (this.context && this.context.cubejsApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n      return {\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      };\n    };\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      values: member.values,\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1);\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n    } = this.state;\n\n    const flatFilters = uniqBy((filter) => `${prop('member', filter)}${prop('operator', filter)}`,\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      })));\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    let availableMeasures = [];\n    let availableDimensions = [];\n    let availableSegments = [];\n    let availableFilterMembers = [];\n\n    const availableMembers = meta?.membersGroupedByCube() || {\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n    };\n\n    if (meta) {\n      availableMeasures = meta.membersForQuery(query, 'measures');\n      availableDimensions = meta.membersForQuery(query, 'dimensions');\n      availableSegments = meta.membersForQuery(query, 'segments');\n\n      const indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n      const indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n      const cubeNames = uniq([...Object.keys(indexedMeasures), ...Object.keys(indexedDimensions)]).sort();\n\n      availableFilterMembers = cubeNames.map((name) => {\n        const cube = indexedMeasures[name] || indexedDimensions[name];\n\n        return {\n          ...cube,\n          members: [\n            ...indexedMeasures[name]?.members,\n            ...indexedDimensions[name]?.members\n          ].sort((a, b) => (a.shortTitle > b.shortTitle ? 1 : -1)),\n        };\n      });\n    }\n\n    const activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n    const members = [\n      ...measures,\n      ...dimensions,\n      ...timeDimensions.map(({ dimension }) => dimension)\n    ];\n\n    let orderMembers = uniqBy(prop('id'), [\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...members.map(({ name, title }) => ({ id: name, title, order: activeOrder?.[name] || 'none' })),\n    ]);\n\n    if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n      this.orderMembersOrderKeys = orderMembers.map(({ id }) => id);\n    }\n\n    if (this.orderMembersOrderKeys.length) {\n      // Preserve order until the members change or manually re-ordered\n      // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n      orderMembers = (this.orderMembersOrderKeys || []).map((id) => orderMembers.find((member) => member.id === id));\n    }\n\n    return {\n      meta,\n      metaError,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      availableMembers,\n      availableFilterMembers,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          const nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n          this.orderMembersOrderKeys = nextArray.map(({ id }) => id);\n\n          this.updateQuery({\n            order: nextArray.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: {\n        ...query,\n        ...queryUpdate,\n      },\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          // use clone to make sure we don't save object references\n          vizStateSent = clone(newVizState);\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    const shouldFetchDryRun = !equals(\n      pick(['measures', 'dimensions', 'timeDimensions'], stateQuery),\n      pick(['measures', 'dimensions', 'timeDimensions'], finalState.query)\n    );\n\n    if (shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubejsApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          queryError: new Error(generateAnsiHTML(error.message || error.toString())),\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return {\n      ...query,\n      filters: (query.filters || []).filter((f) => f.operator),\n    };\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubejsApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubejsApi={cubejsApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n\nQueryBuilder.defaultProps = {\n  cubejsApi: null,\n  stateChangeHeuristics: null,\n  disableHeuristics: false,\n  render: null,\n  wrapWithQueryRenderer: true,\n  defaultChartType: 'line',\n  defaultQuery: {},\n  initialVizState: null,\n  onVizStateChanged: null,\n\n  // deprecated\n  query: null,\n  setQuery: null,\n  vizState: null,\n  setVizState: null,\n};\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nexport default function CubeProvider({ cubejsApi, children }) {\n  return <CubeContext.Provider value={{ cubejsApi }}>{children}</CubeContext.Provider>;\n}\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return () => isMounted.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeFetch(method, options = {}) {\n  const isMounted = useIsMounted();\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n\n  const [response, setResponse] = useState({\n    isLoading: false,\n    response: null,\n  });\n  const [error, setError] = useState(null);\n\n  const { skip = false } = options;\n\n  async function load(loadOptions = {}, ignoreSkip = false) {\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n    const query = loadOptions.query || options.query;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    if ((ignoreSkip || !skip) && query && isQueryPresent(query)) {\n      setError(null);\n      setResponse({\n        isLoading: true,\n        response: null,\n      });\n\n      try {\n        const response = await cubejsApi[method](query, {\n          mutexObj: mutexRef.current,\n          mutexKey: method,\n        });\n\n        if (isMounted()) {\n          setResponse({\n            response,\n            isLoading: false,\n          });\n        }\n      } catch (err) {\n        if (isMounted()) {\n          setError(err);\n          setResponse({\n            isLoading: false,\n            response: null,\n          });\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, useDeepCompareMemoize([Object.keys(options.query?.order || {}), options, context]));\n\n  return {\n    ...response,\n    error,\n    refetch: (options) => load(options, true),\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeSql(query, options = {}) {\n  return useCubeFetch('sql', {\n    ...options,\n    query\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useDryRun(query, options = {}) {\n  return useCubeFetch('dryRun', {\n    ...options,\n    query\n  })\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useLazyDryRun(query, options = {}) {\n  const { refetch, ...result } = useCubeFetch('dryRun', {\n    ...options,\n    query,\n    skip: true\n  });\n\n  return [refetch, result];\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\n\nexport function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useRef(true);\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n\n    try {\n      const response = await cubejsApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n      });\n\n      if (isMounted.current) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted.current) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted.current) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubejsApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted.current) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted.current) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n"]},"metadata":{},"sourceType":"module"}