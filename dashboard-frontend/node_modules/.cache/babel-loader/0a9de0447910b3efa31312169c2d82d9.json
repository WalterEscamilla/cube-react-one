{"ast":null,"code":"var _jsxFileName = \"/Users/walter/Sites/cursos/cubejs/react-cube/dashboard-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, BarChart, Bar } from \"recharts\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport cubejs from \"@cubejs-client/core\";\nimport Chart from \"./Chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cubejsApi = cubejs(process.env.REACT_APP_CUBEJS_TOKEN, {\n  apiUrl: process.env.REACT_APP_API_URL\n});\n\nconst numberFormatter = item => numeral(item).format(\"0,0\");\n\nconst dateFormatter = item => moment(item).format(\"MMM YY\");\n\nconst renderSingleValue = (resultSet, key) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  height: 300,\n  children: numberFormatter(resultSet.chartPivot()[0][key])\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            cubejsApi: cubejsApi,\n            title: \"Total Users\",\n            query: {\n              measures: [\"Users.count\"]\n            },\n            render: resultSet => renderSingleValue(resultSet, \"Users.count\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            cubejsApi: cubejsApi,\n            title: \"Total Orders\",\n            query: {\n              measures: [\"Orders.count\"]\n            },\n            render: resultSet => renderSingleValue(resultSet, \"Orders.count\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            cubejsApi: cubejsApi,\n            title: \"Shipped Orders\",\n            query: {\n              measures: [\"Orders.count\"],\n              filters: [{\n                dimension: \"Orders.status\",\n                operator: \"equals\",\n                values: [\"shipped\"]\n              }]\n            },\n            render: resultSet => renderSingleValue(resultSet, \"Orders.count\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            cubejsApi: cubejsApi,\n            title: \"New Users Over Time\",\n            query: {\n              measures: [\"Users.count\"],\n              timeDimensions: [{\n                dimension: \"Users.createdAt\",\n                dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                granularity: \"month\"\n              }]\n            },\n            render: resultSet => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                data: resultSet.chartPivot(),\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"category\",\n                  tickFormatter: dateFormatter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  tickFormatter: numberFormatter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  labelFormatter: dateFormatter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Area, {\n                  type: \"monotone\",\n                  dataKey: \"Users.count\",\n                  name: \"Users\",\n                  stroke: \"rgb(106, 110, 229)\",\n                  fill: \"rgba(106, 110, 229, .16)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            cubejsApi: cubejsApi,\n            title: \"Orders by Status Over time\",\n            query: {\n              measures: [\"Orders.count\"],\n              dimensions: [\"Orders.status\"],\n              timeDimensions: [{\n                dimension: \"Orders.createdAt\",\n                dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                granularity: \"month\"\n              }]\n            },\n            render: resultSet => {\n              return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: resultSet.chartPivot(),\n                  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                    tickFormatter: dateFormatter,\n                    dataKey: \"x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    tickFormatter: numberFormatter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    stackId: \"a\",\n                    dataKey: \"shipped, Orders.count\",\n                    name: \"Shipped\",\n                    fill: \"#7DB3FF\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    stackId: \"a\",\n                    dataKey: \"processing, Orders.count\",\n                    name: \"Processing\",\n                    fill: \"#49457B\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    stackId: \"a\",\n                    dataKey: \"completed, Orders.count\",\n                    name: \"Completed\",\n                    fill: \"#FF7C78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/walter/Sites/cursos/cubejs/react-cube/dashboard-frontend/src/App.js"],"names":["React","Component","Container","Row","Col","AreaChart","Area","XAxis","YAxis","Tooltip","ResponsiveContainer","Legend","BarChart","Bar","moment","numeral","cubejs","Chart","cubejsApi","process","env","REACT_APP_CUBEJS_TOKEN","apiUrl","REACT_APP_API_URL","numberFormatter","item","format","dateFormatter","renderSingleValue","resultSet","key","chartPivot","App","render","measures","filters","dimension","operator","values","timeDimensions","dateRange","granularity","dimensions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ResponsiveContainer,\n    Legend,\n    BarChart,\n    Bar\n} from \"recharts\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport cubejs from \"@cubejs-client/core\";\nimport Chart from \"./Chart.js\";\n\nconst cubejsApi = cubejs(process.env.REACT_APP_CUBEJS_TOKEN, {\n    apiUrl: process.env.REACT_APP_API_URL\n});\nconst numberFormatter = item => numeral(item).format(\"0,0\");\nconst dateFormatter = item => moment(item).format(\"MMM YY\");\n\nconst renderSingleValue = (resultSet, key) => (\n    <h1 height={300}>{numberFormatter(resultSet.chartPivot()[0][key])}</h1>\n);\n\nclass App extends Component {\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col sm=\"4\">\n                        <Chart\n                            cubejsApi={cubejsApi}\n                            title=\"Total Users\"\n                            query={{ measures: [\"Users.count\"] }}\n                            render={resultSet => renderSingleValue(resultSet, \"Users.count\")}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Chart\n                            cubejsApi={cubejsApi}\n                            title=\"Total Orders\"\n                            query={{ measures: [\"Orders.count\"] }}\n                            render={resultSet => renderSingleValue(resultSet, \"Orders.count\")}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Chart\n                            cubejsApi={cubejsApi}\n                            title=\"Shipped Orders\"\n                            query={{\n                                measures: [\"Orders.count\"],\n                                filters: [\n                                    {\n                                        dimension: \"Orders.status\",\n                                        operator: \"equals\",\n                                        values: [\"shipped\"]\n                                    }\n                                ]\n                            }}\n                            render={resultSet => renderSingleValue(resultSet, \"Orders.count\")}\n                        />\n                    </Col>\n                </Row>\n                <br />\n                <br />\n                <Row>\n                    <Col sm=\"6\">\n                        <Chart\n                            cubejsApi={cubejsApi}\n                            title=\"New Users Over Time\"\n                            query={{\n                                measures: [\"Users.count\"],\n                                timeDimensions: [\n                                    {\n                                        dimension: \"Users.createdAt\",\n                                        dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                                        granularity: \"month\"\n                                    }\n                                ]\n                            }}\n                            render={resultSet => (\n                                <ResponsiveContainer width=\"100%\" height={300}>\n                                    <AreaChart data={resultSet.chartPivot()}>\n                                        <XAxis dataKey=\"category\" tickFormatter={dateFormatter} />\n                                        <YAxis tickFormatter={numberFormatter} />\n                                        <Tooltip labelFormatter={dateFormatter} />\n                                        <Area\n                                            type=\"monotone\"\n                                            dataKey=\"Users.count\"\n                                            name=\"Users\"\n                                            stroke=\"rgb(106, 110, 229)\"\n                                            fill=\"rgba(106, 110, 229, .16)\"\n                                        />\n                                    </AreaChart>\n                                </ResponsiveContainer>\n                            )}\n                        />\n                    </Col>\n                    <Col sm=\"6\">\n                        <Chart\n                            cubejsApi={cubejsApi}\n                            title=\"Orders by Status Over time\"\n                            query={{\n                                measures: [\"Orders.count\"],\n                                dimensions: [\"Orders.status\"],\n                                timeDimensions: [\n                                    {\n                                        dimension: \"Orders.createdAt\",\n                                        dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                                        granularity: \"month\"\n                                    }\n                                ]\n                            }}\n                            render={resultSet => {\n                                return (\n                                    <ResponsiveContainer width=\"100%\" height={300}>\n                                        <BarChart data={resultSet.chartPivot()}>\n                                            <XAxis tickFormatter={dateFormatter} dataKey=\"x\" />\n                                            <YAxis tickFormatter={numberFormatter} />\n                                            <Bar\n                                                stackId=\"a\"\n                                                dataKey=\"shipped, Orders.count\"\n                                                name=\"Shipped\"\n                                                fill=\"#7DB3FF\"\n                                            />\n                                            <Bar\n                                                stackId=\"a\"\n                                                dataKey=\"processing, Orders.count\"\n                                                name=\"Processing\"\n                                                fill=\"#49457B\"\n                                            />\n                                            <Bar\n                                                stackId=\"a\"\n                                                dataKey=\"completed, Orders.count\"\n                                                name=\"Completed\"\n                                                fill=\"#FF7C78\"\n                                            />\n                                            <Legend />\n                                            <Tooltip />\n                                        </BarChart>\n                                    </ResponsiveContainer>\n                                );\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}